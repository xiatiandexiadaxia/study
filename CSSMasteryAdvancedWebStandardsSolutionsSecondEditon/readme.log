第一章
有意义的标记
	如果元素有恰当的含义,就应该使用
ID和类名
	ID用于标识页面上的唯一特定元素
	CLASS用于标识页面同一类元素
为元素命名
	分配ID和CLASS,尽量保持名称和表现方式无关
	应该根据'他们是什么'来为元素命名,而不应该根据'他们的外观如何来'命名
	区分大小写,可以用完全小写,多个单词之间用连字符分割 eg:andy-budd
ID还是CLASS
	CLASS用于概念上相似的元素,这些元素可以出现在同一页面上的多个位置
	ID用于不同的唯一的元素
	只有在绝对确定这个元素只会出现一次的情况下,才使用ID,如果认为以后可能需要相似的元素,就使用CLASS,避免一长串ID选择器相关联的现象 eg:#andy, #rich, #jeremy, $james-box, $paul, $sophie {color:black}
	如果你发现类名中出现了重复的单词,比如news-link和news-head,就应该考虑是否可以把这些元素分解成它们的组成部分.这会让代码更"组件化",会大大提高灵活性,删除不必要的代码
	对类名的过度依赖是完全不必要的,如果发现自己添加了许多类,那意味着HTML文档结构有问题
div和span
	div可以用来对块级元素分组,而span可以用来对行内元素进行分组
	div代表部分,它可以将文档分割为几个有意义的区域,所以通过将主要内容区域包围在div中并分配content类,就可以在文档中添加结构和意义
	应该只在没有现有元素能够实现区域分割的情况下使用div
	eg:主导航列表,就不需要将它包围在div中
		没必要								可以替代
		div class=nav						ul class=nav
			ul									li home /li
				li home /li 				/ul
			/ul
		/div
	过度使用div是代码结构不合理而且过分复杂的信号,div应该根据条目的意义或功能分对相关条目分组,而不是根据他们的表现方式或布局
文档类型
	DTD(文档类型定义),DOCTYPE声明,描述使用哪个DTE,由此知道要使用哪个HTML版本
